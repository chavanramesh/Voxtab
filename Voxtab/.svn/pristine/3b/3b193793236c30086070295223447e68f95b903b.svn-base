
package com.voxtab.ariatech.voxtab.adapter;


import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.voxtab.ariatech.voxtab.OrderDetailsActivity;
import com.voxtab.ariatech.voxtab.R;
import com.voxtab.ariatech.voxtab.bean.OrderHistoryChild;
import com.voxtab.ariatech.voxtab.bean.OrderHistoryGroup;

import java.util.List;

public class ExpandableAdapter extends BaseExpandableListAdapter {

    private List<OrderHistoryGroup> catList;
    private int itemLayoutId;
    private int groupLayoutId;
    private Context ctx;

    public ExpandableAdapter(List<OrderHistoryGroup> catList, Context ctx) {

        this.itemLayoutId = R.layout.item_layout;
        this.groupLayoutId = R.layout.group_layout;
        this.catList = catList;
        this.ctx = ctx;
    }

    @Override
    public Object getChild(int groupPosition, int childPosition) {
        return catList.get(groupPosition).getItemList().get(childPosition);
    }

    @Override
    public long getChildId(int groupPosition, int childPosition) {
        return catList.get(groupPosition).getItemList().get(childPosition).hashCode();
    }

    @Override
    public View getChildView(final int groupPosition, int childPosition,
                             boolean isLastChild, View convertView, ViewGroup parent) {

        View v = convertView;

        if (v == null) {
            LayoutInflater inflater = (LayoutInflater) ctx.getSystemService
                    (Context.LAYOUT_INFLATER_SERVICE);
            v = inflater.inflate(R.layout.item_layout, parent, false);
        }


        TextView txt_status_title = (TextView) v.findViewById(R.id.txt_status_title);
        TextView txt_status_detail = (TextView) v.findViewById(R.id.txt_status_detail);
        TextView txt_order_date = (TextView) v.findViewById(R.id.txt_order_date);
        TextView txt_upload_status_title = (TextView) v.findViewById(R.id.txt_upload_status_title);
        TextView txt_upload_date = (TextView) v.findViewById(R.id.txt_upload_date);
        TextView txt_delivered_status_title = (TextView) v.findViewById(R.id.txt_delivered_status_title);
        TextView txt_delivered_status_details = (TextView) v.findViewById(R.id.txt_delivered_status_details);
        TextView txt_delivery_date = (TextView) v.findViewById(R.id.txt_delivery_date);
        TextView lbl_view_details = (TextView) v.findViewById(R.id.lbl_view_details);
        TextView lbl_download_transcription = (TextView) v.findViewById(R.id.lbl_download_transcription);


        ImageView img_order_status = (ImageView) v.findViewById(R.id.img_order_status);
        ImageView img_upload_status = (ImageView) v.findViewById(R.id.img_upload_status);
        ImageView img_delivered_status = (ImageView) v.findViewById(R.id.img_delivered_status);


        OrderHistoryChild det = catList.get(groupPosition).getItemList().get(childPosition);

        if (det.getTxt_status_title().equals("conf")) {
            txt_status_title.setText("Confirmed");
        }
        txt_status_detail.setText(det.getTxt_status_detail());
        txt_order_date.setText(det.getTxt_order_date());
        txt_upload_status_title.setText(det.getTxt_upload_status_title());
        txt_upload_date.setText(det.getTxt_upload_date());
        txt_delivered_status_title.setText(det.getTxt_delivered_status_title());
        txt_delivered_status_details.setText(det.getTxt_delivered_status_details());
        txt_delivery_date.setText(det.getTxt_delivery_date());

        img_order_status.setImageResource(R.drawable.flag_icon);
        img_upload_status.setImageResource(R.drawable.flag_icon);
        img_delivered_status.setImageResource(R.drawable.flag_icon);

        lbl_view_details.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // view_details
                // Toast.makeText(ctx,""+groupPosition,Toast.LENGTH_LONG).show();
                Intent intent = new Intent(ctx, OrderDetailsActivity.class);
                ctx.startActivity(intent);

            }
        });

        lbl_download_transcription.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //go to transcription page

                Intent intent = new Intent(ctx, OrderDetailsActivity.class);
                ctx.startActivity(intent);
            }
        });
        return v;

    }

    @Override
    public int getChildrenCount(int groupPosition) {
        int size = catList.get(groupPosition).getItemList().size();
        System.out.println("Child for group [" + groupPosition + "] is [" + size + "]");
        return size;
    }

    @Override
    public Object getGroup(int groupPosition) {
        return catList.get(groupPosition);
    }

    @Override
    public int getGroupCount() {
        return catList.size();
    }

    @Override
    public long getGroupId(int groupPosition) {
        return catList.get(groupPosition).hashCode();
    }

    @Override
    public View getGroupView(int groupPosition, boolean isExpanded,
                             View convertView, ViewGroup parent) {

        View v = convertView;

        if (v == null) {
            LayoutInflater inflater = (LayoutInflater) ctx.getSystemService
                    (Context.LAYOUT_INFLATER_SERVICE);
            v = inflater.inflate(R.layout.group_layout, parent, false);
        }

        TextView txt_assignment_num = (TextView) v.findViewById(R.id.txt_assignment_num);
        TextView txt_status_title = (TextView) v.findViewById(R.id.txt_status_title);
        ImageView img_order_status_icon = (ImageView) v.findViewById(R.id.img_order_status);

        OrderHistoryGroup cat = catList.get(groupPosition);

        txt_assignment_num.setText(cat.getAssignment_num());

        //  txt_status_title.setText(cat.getStatus_title());
        if (cat.getStatus_title().equals("conf")) {
            txt_status_title.setText("Confirmed");
        }
        img_order_status_icon.setImageResource(R.drawable.flag_icon);
        return v;

    }

    @Override
    public boolean hasStableIds() {
        return true;
    }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) {
        return true;
    }

}
